/*
	작성자: 박태규
	작성일: 2017-03-28

	[코드 그라운드 미궁속의방문제]

*/
#include <cstdio>
#include <iostream>
using namespace std;

int main(int argc, char** argv) {
	/* 아래 freopen 함수는 input.txt 를 read only 형식으로 연 후,
	앞으로 표준 입력(키보드) 대신 input.txt 파일로 부터 읽어오겠다는 의미의 코드입니다.
	만약 본인의 PC 에서 테스트 할 때는, 입력값을 input.txt에 저장한 후 freopen 함수를 사용하면,
	그 아래에서 scanf 함수 또는 cin을 사용하여 표준입력 대신 input.txt 파일로 부터 입력값을 읽어 올 수 있습니다.
	또한, 본인 PC에서 freopen 함수를 사용하지 않고 표준입력을 사용하여 테스트하셔도 무방합니다.
	단, Codeground 시스템에서 "제출하기" 할 때에는 반드시 freopen 함수를 지우거나 주석(//) 처리 하셔야 합니다. */
	//freopen("input.txt", "r", stdin);

	setbuf(stdout, NULL);

	int TC;
	int test_case;
	int daegak = 1;
	long long result = 1;
	int pos = 1;
	int N, K;
	long long temp;
	scanf("%d", &TC);	// cin 사용 가능
	for (test_case = 1; test_case <= TC; test_case++) {
		// 이 부분에서 알고리즘 프로그램을 작성하십시오.
		cin >> N >> K;
		char ch;
		for (int i = 0; i < K; i++)
		{
			cin >> ch;	
			switch (ch)
			{
			case 'U': 
				if (daegak > N) pos++;
				daegak--;
				
				break;
			case 'D': 
				if (daegak >= N) pos--;
				daegak++;
				break;
			case 'R': 
				if (daegak < N) pos++;
				daegak++;
				break;
			case 'L': 
				if (daegak<=N) pos--;
				daegak--;
				break;
			}
		
			if (daegak <= N)
			{
				if ((daegak % 2)== 1)
				{
					temp = daegak * (daegak - 1) / 2;
					result += (temp + pos);
					temp = 0;
				}
				else if((daegak%2) == 0)
				{
					temp = daegak * (daegak + 1) / 2;
					result += (temp - pos + 1);
					temp = 0;
				}
			}

			else if (daegak >N)
			{
				
				if ((daegak % 2) == 1)
				{
					for (int j = 1; j < daegak - N; j++)
					{
						temp += (N - j);
					}
					temp += N*(N +1) / 2;
					result += (temp + pos);
					temp = 0;

				}
				else if ((daegak % 2) == 0)
				{
					for (int j = 1; j <= daegak - N; j++)
					{
						temp += (N - j);
					}
					temp += (N*(N +1)) / 2;
					result += (temp - pos + 1);
					temp = 0;
					
				}
				
				
			}
		}
		// 이 부분에서 정답을 출력하십시오.
		printf("Case #%d\n", test_case);// cout 사용 가능
		cout << result << endl;
		result = 1;
		pos = 1;
		daegak = 1;
	}

	return 0;	// 정상종료 시 반드시 0을 리턴해야 합니다.
}